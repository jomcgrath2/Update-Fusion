/*  
  Google Spreadsheet to Fusion Table
  Original script by Jon Mcgrath - https://github.com/jomcgrath2/Fusion-to-Spreadsheet
  Updated by Mark Anthony Cianfrani - http://markanthonycianfrani.com
  OAuth code borrowed from Henrique Abreu http://bit.ly/PbZWtA
*/

var tableid = 4859423; //Insert Table ID of Fusion Table
var rangeName = 'updateFusion'; // the name of the range given by this script

//create button
function onOpen() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var menuEntries = [ {name: "Update Fusion Table", functionName: "updateFusion"}, 
                      {name: "Change Email Information", functionName: "fixEmail"},
                      {name: "Change Range of Data to be Sent (Include Headers)", functionName: "setRangeFusion"}];
  ss.addMenu("Update Fusion", menuEntries);
}

//Main Function
function updateFusion() {
  deleteData(tableid); // Calls deleteData function, empties Fusion Table
  updateData(tableid); // Calls updateData, updates Fusion Table
  SpreadsheetApp.getActiveSpreadsheet().toast(Logger.getLog(), "Fusion Tables Update", 10) //browserbox confirmation that info has been sent 
}

var fusionUrl = 'https://www.google.com/fusiontables/api/query';
var fetchArgs = googleOAuth_('fusion',fusionUrl);

//Fusion Table Query Function / Accepts either "get" or "post" methods 
function fusion_(method,sql) {
  var url = fusionUrl;
  fetchArgs.method = method;
  if( method == 'get' ) {
    url += '?sql='+sql;
    fetchArgs.payload = null;
  } else
    fetchArgs.payload = 'sql='+sql;
    return UrlFetchApp.fetch(url, fetchArgs).getContentText();
}

//OAuth Authentication 
function googleOAuth_(name,scope) {
  var oAuthConfig = UrlFetchApp.addOAuthService(name);
  oAuthConfig.setRequestTokenUrl("https://www.google.com/accounts/OAuthGetRequestToken?scope="+scope);
  oAuthConfig.setAuthorizationUrl("https://www.google.com/accounts/OAuthAuthorizeToken");
  oAuthConfig.setAccessTokenUrl("https://www.google.com/accounts/OAuthGetAccessToken");
  oAuthConfig.setConsumerKey('anonymous');
  oAuthConfig.setConsumerSecret('anonymous');
  return {oAuthServiceName:name, oAuthUseToken:"always"};
}

//Delete Fusion Table
function deleteData(){ 
  var method = 'post';
  var sql = "DELETE FROM " + tableid;
  Logger.log(fusion_(method,sql));
}

//Update Fusion Table from Spreadsheet Data
function updateData() {

  //Find sheets with ranges that will be sent
  var ss = SpreadsheetApp.getActiveSpreadsheet();  //gets the active spreadsheet
  var range = ss.getRangeByName(rangeName);
  var numColumns = range.getNumColumns();
  var optimalSend = Math.round(7500/numColumns) - 1;
  var sendNum = Math.min(500,optimalSend);
  var data = range.getValues();

  /* REMOVE COMMENTS TO ALLOW CODE TO EXECUTE)
  //format date (
  for( var i in data ) {
    for( var j in data[i] ) {
      if (Object.prototype.toString.call(data[i][j]) === '[object Date]') {
        data[i][j] = Utilities.formatDate(data[i][j], "GMT", "MM/dd/yyyy HH:mm:ss");
      }
    }
  }
  */

  //Change array to string and remove apostrophe
  var dataString = Utilities.jsonStringify(data);  //turns the data array into a string
  dataString = dataString.replace(/'/g, "\\'"); //removes apostrophes from the stings and replaces them with \' which wont break the code
  data = Utilities.jsonParse(dataString); //turns the data string into an array again
  
  //Define headers and prepend and create query
  var headers = data[0]; //defines the headers as the first row in the data array
  var queryPrepend = "INSERT INTO " + tableid + " (" + "\'" +headers.join("\',\'") + "\'" + ") VALUES ('"; //creates the prepend for the query
  var query = ""; //creates the string where the query will be saved
  var count = 0;
  var updatedRowsCount = 0;
  var response;
  
 
  for (var i = 1; i < data.length; ++i) {
    if (data[i][0] != "") {  //if the first column is empty continue will jump to the next i value instead going further
      query += queryPrepend + data[i].join("','") + "'); "; //combines the data with the prepends and adds it to the query string;
       count++
    }
    
     if (count == sendNum || i == data.length - 1) {
        response = fusion_('post', query);
      
      // If the query failed with a 401 or 500 error, try again one more time.
      if (response == -1) {
          response = fusion_('post', query);
      }
    
      // If the query failed again, or failed for some other reason, return.
      if (response == -1 || response == -2) {
        return;
      }
      
      updatedRowsCount += response.split(/\n/).length - 2;
      query = "";
      count = 0;
    }
  }
  Logger.log("Updated " + updatedRowsCount + " rows in the Fusion Table");
  return;
}

//Sets and names range defined by User
function setRangeFusion() {
   var decision = Browser.msgBox("WARNING", "Are you sure you want to change the Update Fusion Range?", Browser.Buttons.YES_NO);
   if (decision == 'yes'){
     var ss = SpreadsheetApp.getActiveSpreadsheet();
     var check = ss.getRangeByName(rangeName)
         if (check != null) {
           ss.removeNamedRange(rangeName);
         }
     var range = SpreadsheetApp.getActiveRange()
     ss.setNamedRange(rangeName, range);
     Browser.msgBox("WARNING", "The range \'" + rangeName + "\' used to send data to Fusion has been changed.", Browser.Buttons.OK);
   }
}
